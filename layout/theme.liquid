<!doctype html>

{%- assign direction = 'ltr' -%}
{%- case request.locale.iso_code -%}
  {%- when 'ar', 'arc', 'dv', 'fa', 'ha', 'he', 'kwh', 'ks', 'ku', 'ps', 'ur', 'yi' -%}
    {%- assign direction = 'rtl' -%}
{%- endcase -%}

<link rel='stylesheet' href='https://unpkg.com/swiper@8/swiper-bundle.min.css'>

<script>
  const redirect = localStorage.getItem('redirect');

  const europeanCountryCodes = [
    'AL',
    'AD',
    'AM',
    'AT',
    'AZ',
    'BY',
    'BE',
    'BA',
    'BG',
    'HR',
    'CY',
    'CZ',
    'DK',
    'EE',
    'FI',
    'FR',
    'GE',
    'DE',
    'GR',
    'HU',
    'IS',
    'IE',
    'IT',
    'KZ',
    'XK',
    'LV',
    'LI',
    'LT',
    'LU',
    'MT',
    'MD',
    'MC',
    'ME',
    'NL',
    'MK',
    'NO',
    'PL',
    'PT',
    'RO',
    'RU',
    'SM',
    'RS',
    'SK',
    'SI',
    'ES',
    'SE',
    'CH',
    'TR',
    'UA',
    'GB',
    'VA',
  ];

  async function getIpAddress() {
    if (redirect) {
      return;
    }
    try {
      const response = await fetch('https://api.ipify.org?format=json');
      const data = await response.json();
      const ipDetails = await getIpDetails(data.ip);
      const europeanCountry = isEuropeanCountry(ipDetails.country_code);
      const url = new URL(window.location.href);
      if (europeanCountry || url.hash.includes('redirect')) {
        return null;
      }

      if (url.hash.includes('redirect')) {
        localStorage.setItem('redirect', true);
      }
      window.location.href = `https://atomstack.com${url.pathname}`;
    } catch (error) {
      console.error('Error fetching IP address:', error);
    }
  }

  async function getIpDetails(ipAddress) {
    try {
      const response = await fetch(`https://api.ip.sb/geoip/${ipAddress}`);
      return await response.json();
    } catch (error) {
      console.log('error', error);
    }
  }

  function isEuropeanCountry(countryCode) {
    return europeanCountryCodes.includes(countryCode);
  }

  // if (!window.location.href.includes('127.0.0.1')) {
  //   getIpAddress();
  // }

  // getIpAddress();
</script>

<html class='no-js' lang='{{ request.locale.iso_code }}' dir='{{ direction }}'>
  <head>
    {% render 'pandectes-rules' %}

    <meta charset='UTF-8'>
    <meta
      name='viewport'
      content='width=device-width, initial-scale=1.0, height=device-height, minimum-scale=1.0, maximum-scale=1.0'
    >
    <meta name='theme-color' content='{{ settings.header_background }}'>
    <meta name='google-site-verification' content='IV7BPLESttSpBdxSWN1s4zlr4HIcuHkGQYmE3wLG59w'>

    <!-- Google Tag Manager -->
    <script>
      (function (w, d, s, l, i) {
        w[l] = w[l] || [];
        w[l].push({ 'gtm.start': new Date().getTime(), event: 'gtm.js' });
        var f = d.getElementsByTagName(s)[0],
          j = d.createElement(s),
          dl = l != 'dataLayer' ? '&l=' + l : '';
        j.async = true;
        j.src = 'https://www.googletagmanager.com/gtm.js?id=' + i + dl;
        f.parentNode.insertBefore(j, f);
      })(window, document, 'script', 'dataLayer', 'GTM-M6M828RQ');
    </script>
    <!-- End Google Tag Manager -->
    {% render 'Google-Dynamic-Remarketing' %}

    {% comment %}
      Block users that use Chinese browsers.
    {% endcomment %}
    {% if settings.block_cn_browser %}
      {% render 'block-chinese-browser' %}
    {% endif %}

    {% comment %}
      Disable right-clicking.
    {% endcomment %}
    {% if settings.block_right_mouse %}
      <script>
        window.oncontextmenu = function (e) {
          e.preventDefault();
        };
      </script>
    {% endif %}

    {% comment %}
      Block users from Mainland China or Hong Kong from accessing the website.
    {% endcomment %}
    {% if settings.block_cn_hk_ips %}
      {% render 'block-cn-hk' %}
    {% endif %}

    <title>
      {% if page_title == blank -%}
        {{- shop.name -}}
      {%- else -%}
        {{- page_title -}}
        {%- if current_page != 1 %}&ndash; {{ 'general.meta.page' | t: page: current_page }}{% endif -%}
      {%- endif %}
    </title>

    {%- if page_description -%}
      <meta name='description' content='{{ page_description | escape }}'>
    {%- endif -%}

    <link rel='canonical' href='{{ canonical_url }}'>

    {%- if settings.favicon -%}
      <link rel='shortcut icon' href='{{ settings.favicon | image_url: width: 96, height: 96 }}' type='image/png'>
    {%- endif -%}

    {%- comment -%}
      Few prefech to increase performance on commonly used third-parties.
    {%- endcomment -%}
    <link rel='preconnect' href='https://cdn.shopify.com'>
    <link rel='dns-prefetch' href='https://productreviews.shopifycdn.com'>
    <link rel='dns-prefetch' href='https://www.google-analytics.com'>

    {%- comment -%}
      Google Fonts.
    {%- endcomment -%}
    {% # theme-check-disable RemoteAsset %}
    {%- if settings.heading_font_google != blank -%}
      <link
        href='https://fonts.googleapis.com/css2?family={{ settings.heading_font_google }}&display=swap'
        rel='stylesheet preconnect'
      >
    {%- endif -%}
    {%- if settings.text_font_google != blank -%}
      <link
        href='https://fonts.googleapis.com/css2?family={{ settings.text_font_google }}&display=swap'
        rel='stylesheet preconnect'
      >
    {%- endif -%}
    {% # theme-check-enable RemoteAsset %}

    {%- if settings.heading_font_google == blank
      and settings.heading_font.system? == false
      or settings.text_font_google == blank
      and settings.text_font.system? == false
    -%}
      <link rel='preconnect' href='https://fonts.shopifycdn.com' crossorigin>
    {%- endif -%}

    {%- comment -%}
      Preload important resources.
    {%- endcomment -%}
    <link rel='preload' as='style' href='{{ 'theme.css' | asset_url }}'>
    <link rel='preload' as='script' href='{{ 'vendor.js' | asset_url }}'>
    <link rel='preload' as='script' href='{{ 'theme.js' | asset_url }}'>

    {%- comment -%}
      IMPLEMENTATION NOTE: for improving performance, Zalify tries to preload images on known pages (such as blog page, product or collection pages). In order to keep a main JS file size minimal, the theme also lazyloads non-essential libraries (such as PhotoSwipe or Flickity) and only loads them on demand.
    {%- endcomment -%}
    {%- if request.page_type == 'product' -%}
      {%- assign selected_media = product.selected_variant.featured_media | default: product.featured_media -%}

      <link rel='preload' as='fetch' href='{{ product.url }}.js' crossorigin>
      <link
        rel='preload'
        as='image'
        imagesizes='(max-width: 999px) calc(100vw - 48px), 640px'
        imagesrcset='{% render 'image-attributes', image: selected_media, sizes: '400,500,600,700,800,900,1000,1100,1200,1300,1400,1500,1600,1700,1800', sizes_only: true %}'
      >

      {%- if product.media.size > 1 -%}
        <link rel='preload' as='script' href='{{ 'flickity.js' | asset_url }}'>
      {%- endif -%}
    {%- elsif request.page_type == 'collection' and collection.image -%}
      <link
        rel='preload'
        as='image'
        media='(max-width: 740px)'
        imagesizes='100vw'
        imagesrcset='{% render 'image-attributes', image: collection.image, sizes: '400,500,600,700,800,900,1000', height_constraint: 600, crop: 'center', sizes_only: true %}'
      >
      <link
        rel='preload'
        as='image'
        media='(min-width: 741px)'
        imagesizes='100vw'
        imagesrcset='{% render 'image-attributes', image: collection.image, sizes: '600,700,800,1000,1200,1400,1600,1800,2000,2200,2400,2600', sizes_only: true %}'
      >
    {%- endif -%}

    {% render 'social-meta-tags' %}
    {% render 'microdata-schema' %}
    {% render 'css-variables', direction: direction %}
    {% render 'js-variables', direction: direction %}

    <link rel='stylesheet' href='{{ 'theme.css' | asset_url }}'>

    <script src='{{ 'vendor.js' | asset_url }}' defer></script>
    <script src='{{ 'theme.js' | asset_url }}' defer></script>
    <script src='{{ 'custom.js' | asset_url }}' defer></script>

    {%- if request.design_mode -%}
      <script src='{{ 'zalify-video-widgets.js' | asset_url }}' defer></script>
    {%- endif -%}

    {%- if settings.paypal_client_id != blank -%}
      {% # theme-check-disable RemoteAsset %}
      <script
        src='https://www.paypal.com/sdk/js?client-id={{ settings.paypal_client_id }}&components=buttons&currency={{ cart.currency.iso_code }}'
        defer
      ></script>
      {% # theme-check-enable RemoteAsset %}
    {%- endif -%}

    {{ content_for_header }}

    {% include 'huk-mega-menu-pro' %}

    <script src='{{ 'timesact.js' | asset_url }}' defer='defer'></script>

    {% include 'pagefly-app-header' %}
  </head>

  {%- assign feature_classes = '' -%}
  {%- if settings.show_image_zoom -%}
    {% assign feature_classes = feature_classes | append: ' features--image-zoom' %}
  {%- endif -%}

  <script src='https://unpkg.com/swiper@8/swiper-bundle.min.js'></script>
  <body
    class='no-focus-outline {{ feature_classes }}'
    data-instant-allow-query-string
  >
    <!-- Google Tag Manager (noscript) -->
    <noscript>
      <iframe
        src='https://www.googletagmanager.com/ns.html?id=GTM-M6M828RQ'
        height='0'
        width='0'
        style='display:none;visibility:hidden'
      ></iframe>
    </noscript>
    <!-- End Google Tag Manager (noscript) -->
    {%- comment -%}
      Common SVG definitions that we are re-using in several places.
    {%- endcomment -%}
    <svg class='visually-hidden'>
      <linearGradient id="rating-star-gradient-half">
        <stop offset="50%" stop-color="rgb(var(--product-star-rating))" />
        <stop offset="50%" stop-color="rgb(var(--product-star-rating))" stop-opacity="0.4" />
      </linearGradient>
    </svg>

    <a href='#main' class='visually-hidden skip-to-content'>{{ 'general.accessibility.skip_to_content' | t }}</a>
    <loading-bar class='loading-bar'></loading-bar>

    {%- if request.page_type != 'gift_card'
      and request.page_type != 'password'
      and request.path != settings.unavailable_page.url
    -%}
      {%- section 'back-to-top' -%}
      {% section 'active-bar' %}
      {% section 'toggle-country-navigation' %}
      {% comment %} {%- section 'announcement-bar' -%} {% endcomment %}
      {%- section 'popup' -%}
      {%- section 'video-bubble' -%}
      {%- section 'video-bubble-v2' -%}
      {%- section 'header' -%}

      {%- unless settings.cart_type == 'page' or request.page_type == 'cart' -%}
        {%- section 'mini-cart' -%}
      {%- endunless -%}
    {%- endif -%}

    <div id='main' role='main' class='anchor'>
      {%- comment -%}
        IMPLEMENTATION NOTE: on collection and search page, the theme was designed to show on mobile the filter bar and/or sort by at the very top of the page. However, due to the fact that sections are isolated, I had to move the code here. Then, the collection section, based on the selected settings, will eventually hide those elements in CSS.
      {%- endcomment -%}
      {%- if request.page_type == 'collection' or request.page_type == 'search' -%}
        {%- assign active_filters_count = 0 -%}

        {%- if request.page_type == 'collection' -%}
          {%- assign filters = collection.filters -%}
        {%- else -%}
          {%- assign filters = search.filters -%}
        {%- endif -%}

        {%- for filter in filters -%}
          {%- if filter.type == 'list' -%}
            {%- assign active_filters_count = active_filters_count | plus: filter.active_values.size -%}
          {%- elsif filter.type == 'price_range' and filter.min_value.value or filter.max_value.value -%}
            {%- assign active_filters_count = active_filters_count | plus: 1 -%}
          {%- endif -%}
        {%- endfor -%}

        {%- assign is_toolbar_collapsed = false -%}

        {%- if request.page_type == 'search'
          and search.results.first.object_type != 'product'
          and search.results_count > 0
        -%}
          {%- assign is_toolbar_collapsed = true -%}
        {%- endif -%}

        <div
          id='mobile-facet-toolbar'
          class='mobile-toolbar {% if is_toolbar_collapsed %}is-collapsed{% endif %} hidden-lap-and-up'
        >
          <button
            is='toggle-button'
            class='mobile-toolbar__item mobile-toolbar__item--filters {% if active_filters_count > 0 %}has-filters{% endif %}'
            aria-expanded='false'
            aria-controls='facet-filters'
            style='display: none'
          >
            {%- render 'icon' with 'filters' -%}
            <span class='mobile-toolbar__item-label'>{{- 'collection.general.filters' | t -}}</span>
          </button>

          <button
            is='toggle-button'
            class='mobile-toolbar__item mobile-toolbar__item--sort'
            aria-expanded='false'
            aria-controls='sort-by-popover'
            style='display: none'
          >
            <span class='mobile-toolbar__item-label'>{{- 'collection.general.sort_by' | t -}}</span>
            {%- render 'icon' with 'chevron' -%}
          </button>
        </div>
      {%- endif -%}

      {% capture pagefly_content_for_layout %}
    {{ content_for_layout }}
  {% endcapture %}
      {% render 'pagefly-render-section', pagefly_content_for_layout: pagefly_content_for_layout %}

      {%- unless request.page_type == 'index' or request.page_type == 'password' or request.page_type == 'gift_card' -%}
        {%- section 'static-text-with-icons' -%}
        {%- section 'static-newsletter' -%}
      {%- endunless -%}
    </div>

    {%- if request.page_type != 'gift_card'
      and request.page_type != 'password'
      and request.path != settings.unavailable_page.url
    -%}
      {%- section 'footer' -%}
      {%- section 'footer-navigation' -%}
      {%- section 'color-swatch-patterns' -%}
    {%- endif -%}

    <script>
      (function () {
        var s = document.createElement('script');
        s.src = 'https://static.willdesk.com/c/willdesk.min.js?v=';
        s.src += new Date().getTime();
        document.body.appendChild(s);
      })();
    </script>

    <script>
      window.addEventListener('DOMContentLoaded', (e) => {
        let max = 0;
        document.querySelectorAll('[data-pf-type="ProductList2"]').forEach((e) => {
          let t = 0;
          e.querySelectorAll('[data-pf-type="ProductTitle"]').forEach((e) => {
            let l = e.offsetHeight;
            if (l > t) {
              t = l;
              max = t;
            }
          });
          console.log('max', max);
          e.querySelectorAll('[data-pf-type="ProductTitle"]').forEach((el) =>
            el.setAttribute('style', `min-height: ${max}px !important`),
          );
        });
      });
    </script>
    {% if product %}
      <script>
        window.addEventListener('load', function () {
          var _learnq = window._learnq || [];
          function addedToCart() {
            fetch(`${window.location.origin}/cart.js`).then((res) =>
              res
                .clone()
                .json()
                .then((data) => {
                  var cart = {
                    total_price: data.total_price / 100,
                    $value: data.total_price / 100,
                    total_discount: data.total_discount,
                    original_total_price: data.original_total_price / 100,
                    items: data.items,
                  };
                  if (item !== 'undefined') {
                    cart = Object.assign(cart, item);
                  }
                  if (klAjax) {
                    _learnq.push(['track', 'Added to Cart', cart]);
                    klAjax = false;
                  }
                }),
            );
          }
          (function (ns, fetch) {
            ns.fetch = function () {
              const response = fetch.apply(this, arguments);
              response.then((res) => {
                if (`${window.location.origin}/cart/add.js`.includes(res.url)) {
                  addedToCart();
                }
              });
              return response;
            };
          })(window, window.fetch);
          var klAjax = true;
          var atcButtons = document.querySelectorAll("form[action*='/cart/add'] button[type='submit']");
          for (var i = 0; i < atcButtons.length; i++) {
            atcButtons[i].addEventListener('click', function () {
              if (klAjax) {
                _learnq.push(['track', 'Added to Cart', item]);
                klAjax = false;
              }
            });
          }
        });
      </script>
    {% endif %}
    <script src='{{ 'fixed-bug.js' | asset_url }}' defer></script>
  </body>
  {% render 'gm-custom' %}
</html>
